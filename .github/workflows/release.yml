name: Build
on:
  push:
    # A tag allows the final publish job
    tags:
      - "v*"
    # Matrix will run on tag and PR
  pull_request:
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  bindings:
    name: ${{ matrix.runner }}-node${{ matrix.node }}-${{ matrix.arch }}
    strategy:
      matrix:
        runner:
          - ubuntu-22.04
          - macos-latest
        node:
          - "16"
          - "18"
        arch:
          - "x64"
          - "arm64"
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "true"
      - name: Install system dependencies
        run: scripts/install-dependencies.sh
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: npm
      - name: Override version with tag
        # Don't worry about this for Pull Requests
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF/refs\/tags\/v/}
          npm --no-git-tag-version --allow-same-version version $VERSION
      - name: Install package
        run: npm install
        # This will also cause our "install" script to run, building the gl package
      - name: Build binaries
        run: |
          ./node_modules/.bin/node-gyp rebuild --arch=${{ matrix.arch }}
          ./node_modules/.bin/node-pre-gyp package --target_arch=${{ matrix.arch}}
      - name: Set artifact name
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "::set-output name=VERSION::$VERSION"
          echo "::set-output name=NAME::$(ls build/stage/v$VERSION/. | head -n 1)"
        id: binding
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.binding.outputs.NAME }}
          path: build/stage/v${{ steps.binding.outputs.VERSION }}/${{ steps.binding.outputs.NAME }}
  publish:
    name: Publish to NPM
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - bindings
    runs-on: ubuntu-22.04
    steps:
      # Download all binaries
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "true"
      - name: Install system dependencies
        run: scripts/install-dependencies.sh
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: npm
      - name: Override version with tag
        run: |
          VERSION=${GITHUB_REF/refs\/tags\/v/}
          npm --no-git-tag-version --allow-same-version version $VERSION
      - name: Install package
        run: npm install
      - name: Set version
        id: version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "::set-output name=VERSION::$VERSION"
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: build/stage/v${{ steps.version.outputs.VERSION }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/stage/v${{ steps.version.outputs.VERSION }}/*/*.tar.gz
      - name: Publish package
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc && \
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
